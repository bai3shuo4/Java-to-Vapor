const vmt_TV
 :TV.Start
const vmt_Visitor
 :Visitor.visit
 :Visitor.visit
const vmt_Tree
 :Tree.Init
 :Tree.SetRight
 :Tree.SetLeft
 :Tree.GetRight
 :Tree.GetLeft
 :Tree.GetKey
 :Tree.SetKey
 :Tree.GetHas_Right
 :Tree.GetHas_Left
 :Tree.SetHas_Left
 :Tree.SetHas_Right
 :Tree.Compare
 :Tree.Insert
 :Tree.Delete
 :Tree.Remove
 :Tree.RemoveRight
 :Tree.RemoveLeft
 :Tree.Search
 :Tree.Print
 :Tree.RecPrint
 :Tree.accept
func Main()
t.0 = HeapAllocZ(4)
[t.0] = :vmt_TV
if t.0 goto :null0
	Error("null pointer")
null0:
t.1 = [t.0]
t.1 = [t.1+0]
t.2 = call t.1(t.0 )
PrintIntS(t.2)
ret
func TV.Start(this )
t.0 = HeapAllocZ(28)
[t.0] = :vmt_Tree
if t.0 goto :null1
	Error("null pointer")
null1:
root = t.0
t.1 = 16
t.2 = root
t.3 = [t.2]
t.3 = [t.3+0]
t.4 = call t.3(t.2 t.1 )
ntb = t.4
t.5 = root
t.6 = [t.5]
t.6 = [t.6+72]
t.7 = call t.6(t.5 )
ntb = t.7
t.8 = 100000000
PrintIntS(t.8)
t.9 = 8
t.10 = root
t.11 = [t.10]
t.11 = [t.11+48]
t.12 = call t.11(t.10 t.9 )
ntb = t.12
t.13 = 24
t.14 = root
t.15 = [t.14]
t.15 = [t.15+48]
t.16 = call t.15(t.14 t.13 )
ntb = t.16
t.17 = 4
t.18 = root
t.19 = [t.18]
t.19 = [t.19+48]
t.20 = call t.19(t.18 t.17 )
ntb = t.20
t.21 = 12
t.22 = root
t.23 = [t.22]
t.23 = [t.23+48]
t.24 = call t.23(t.22 t.21 )
ntb = t.24
t.25 = 20
t.26 = root
t.27 = [t.26]
t.27 = [t.27+48]
t.28 = call t.27(t.26 t.25 )
ntb = t.28
t.29 = 28
t.30 = root
t.31 = [t.30]
t.31 = [t.31+48]
t.32 = call t.31(t.30 t.29 )
ntb = t.32
t.33 = 14
t.34 = root
t.35 = [t.34]
t.35 = [t.35+48]
t.36 = call t.35(t.34 t.33 )
ntb = t.36
t.37 = root
t.38 = [t.37]
t.38 = [t.38+72]
t.39 = call t.38(t.37 )
ntb = t.39
t.40 = 100000000
PrintIntS(t.40)
error
