const vmt_LL
 :LL.Start
const vmt_Element
 :Element.Init
 :Element.GetAge
 :Element.GetSalary
 :Element.GetMarried
 :Element.Equal
 :Element.Compare
const vmt_List
 :List.Init
 :List.InitNew
 :List.Insert
 :List.SetNext
 :List.Delete
 :List.Search
 :List.GetEnd
 :List.GetElem
 :List.GetNext
 :List.Print
func Main()
t.0 = HeapAllocZ(4)
[t.0] = :vmt_LL
if t.0 goto :null0
	Error("null pointer")
null0:
t.1 = [t.0]
t.1 = [t.1+0]
t.2 = call t.1(t.0 )
PrintIntS(t.2)
ret
func Element.Init(this v_Age v_Salary v_Married )
t.0 = v_Age
[this + 4] = t.0
t.1 = v_Salary
[this + 8] = t.1
t.2 = v_Married
[this + 12] = t.2
t.3 = 1
ret t.3
func Element.GetAge(this )
t.0 = [this + 4]
ret t.0
func Element.GetSalary(this )
t.0 = [this + 8]
ret t.0
func Element.GetMarried(this )
t.0 = [this + 12]
ret t.0
func Element.Equal(this other )
t.0 = 1
ret_val = t.0
t.1 = other
t.2 = [t.1]
t.2 = [t.2+4]
t.3 = call t.2(t.1 )
aux01 = t.3
t.4 = aux01
t.5 = [this + 4]
t.6 = this
t.7 = [this]
t.7 = [t.7+20]
t.8 = call t.7(this t.4 t.5 )
t.9 = Sub(1 t.8)
if0 t.9 goto :if0_else
t.10 = 0
ret_val = t.10
goto :if0_end
if0_else:
t.11 = other
t.12 = [t.11]
t.12 = [t.12+8]
t.13 = call t.12(t.11 )
aux02 = t.13
t.14 = aux02
t.15 = [this + 8]
t.16 = this
t.17 = [this]
t.17 = [t.17+20]
t.18 = call t.17(this t.14 t.15 )
t.19 = Sub(1 t.18)
if0 t.19 goto :if1_else
t.20 = 0
ret_val = t.20
goto :if1_end
if1_else:
t.21 = [this + 12]
if0 t.21 goto :if2_else
t.22 = other
t.23 = [t.22]
t.23 = [t.23+12]
t.24 = call t.23(t.22 )
t.25 = Sub(1 t.24)
if0 t.25 goto :if3_else
t.26 = 0
ret_val = t.26
goto :if3_end
if3_else:
t.27 = 0
nt = t.27
if3_end:
goto :if2_end
if2_else:
t.28 = other
t.29 = [t.28]
t.29 = [t.29+12]
t.30 = call t.29(t.28 )
if0 t.30 goto :if4_else
t.31 = 0
ret_val = t.31
goto :if4_end
if4_else:
t.32 = 0
nt = t.32
if4_end:
if2_end:
if1_end:
if0_end:
t.33 = ret_val
ret t.33
func Element.Compare(this num1 num2 )
t.0 = 0
retval = t.0
t.1 = num2
t.2 = 1
t.3 = Add(t.1 t.2)
aux02 = t.3
t.4 = num1
t.5 = num2
t.6 = LtS(t.4 t.5)
if0 t.6 goto :if5_else
t.7 = 0
retval = t.7
goto :if5_end
if5_else:
t.8 = num1
t.9 = aux02
t.10 = LtS(t.8 t.9)
t.11 = Sub(1 t.10)
if0 t.11 goto :if6_else
t.12 = 0
retval = t.12
goto :if6_end
if6_else:
t.13 = 1
retval = t.13
if6_end:
if5_end:
t.14 = retval
ret t.14
func List.Init(this )
t.0 = 1
[this + 12] = t.0
t.1 = 1
ret t.1
func List.InitNew(this v_elem v_next v_end )
t.0 = v_end
[this + 12] = t.0
t.1 = v_elem
[this + 4] = t.1
t.2 = v_next
[this + 8] = t.2
t.3 = 1
ret t.3
func List.Insert(this new_elem )
t.0 = this
aux03 = t.0
t.1 = HeapAllocZ(16)
[t.1] = :vmt_List
if t.1 goto :null1
	Error("null pointer")
null1:
aux02 = t.1
t.2 = new_elem
t.3 = aux03
t.4 = 0
t.5 = aux02
t.6 = [t.5]
t.6 = [t.6+4]
t.7 = call t.6(t.5 t.2 t.3 t.4 )
ret_val = t.7
t.8 = aux02
ret t.8
func List.SetNext(this v_next )
t.0 = v_next
[this + 8] = t.0
t.1 = 1
ret t.1
func List.Delete(this e )
t.0 = this
my_head = t.0
t.1 = 0
ret_val = t.1
t.2 = 0
t.3 = 1
t.4 = Sub(t.2 t.3)
aux04 = t.4
t.5 = this
aux01 = t.5
t.6 = this
prev = t.6
t.7 = [this + 12]
var_end = t.7
t.8 = [this + 4]
var_elem = t.8
while0_top:
t.9 = var_end
t.10 = Sub(1 t.9)
if0 t.10 goto :ss0_else
t.11 = ret_val
t.12 = Sub(1 t.11)
goto :ss0_end
ss0_else:
t.12 = 0
ss0_end:
if0 t.12 goto :while0_end
t.13 = var_elem
t.14 = e
t.15 = [t.14]
t.15 = [t.15+16]
t.16 = call t.15(t.14 t.13 )
if0 t.16 goto :if7_else
t.17 = 1
ret_val = t.17
t.18 = aux04
t.19 = 0
t.20 = LtS(t.18 t.19)
if0 t.20 goto :if8_else
t.21 = aux01
t.22 = [t.21]
t.22 = [t.22+32]
t.23 = call t.22(t.21 )
my_head = t.23
goto :if8_end
if8_else:
t.24 = 0
t.25 = 555
t.26 = Sub(t.24 t.25)
PrintIntS(t.26)
t.27 = aux01
t.28 = [t.27]
t.28 = [t.28+32]
t.29 = call t.28(t.27 )
t.30 = prev
t.31 = [t.30]
t.31 = [t.31+12]
t.32 = call t.31(t.30 t.29 )
aux05 = t.32
t.33 = 0
t.34 = 555
t.35 = Sub(t.33 t.34)
PrintIntS(t.35)
if8_end:
goto :if7_end
if7_else:
t.36 = 0
nt = t.36
if7_end:
t.37 = ret_val
t.38 = Sub(1 t.37)
if0 t.38 goto :if9_else
t.39 = aux01
prev = t.39
t.40 = aux01
t.41 = [t.40]
t.41 = [t.41+32]
t.42 = call t.41(t.40 )
aux01 = t.42
t.43 = aux01
t.44 = [t.43]
t.44 = [t.44+24]
t.45 = call t.44(t.43 )
var_end = t.45
t.46 = aux01
t.47 = [t.46]
t.47 = [t.47+28]
t.48 = call t.47(t.46 )
var_elem = t.48
t.49 = 1
aux04 = t.49
goto :if9_end
if9_else:
t.50 = 0
nt = t.50
if9_end:
goto :while0_top
while0_end:
t.51 = my_head
ret t.51
func List.Search(this e )
t.0 = 0
int_ret_val = t.0
t.1 = this
aux01 = t.1
t.2 = [this + 12]
var_end = t.2
t.3 = [this + 4]
var_elem = t.3
while1_top:
t.4 = var_end
t.5 = Sub(1 t.4)
if0 t.5 goto :while1_end
t.6 = var_elem
t.7 = e
t.8 = [t.7]
t.8 = [t.8+16]
t.9 = call t.8(t.7 t.6 )
if0 t.9 goto :if10_else
t.10 = 1
int_ret_val = t.10
goto :if10_end
if10_else:
t.11 = 0
nt = t.11
if10_end:
t.12 = aux01
t.13 = [t.12]
t.13 = [t.13+32]
t.14 = call t.13(t.12 )
aux01 = t.14
t.15 = aux01
t.16 = [t.15]
t.16 = [t.16+24]
t.17 = call t.16(t.15 )
var_end = t.17
t.18 = aux01
t.19 = [t.18]
t.19 = [t.19+28]
t.20 = call t.19(t.18 )
var_elem = t.20
goto :while1_top
while1_end:
t.21 = int_ret_val
ret t.21
func List.GetEnd(this )
t.0 = [this + 12]
ret t.0
func List.GetElem(this )
t.0 = [this + 4]
ret t.0
func List.GetNext(this )
t.0 = [this + 8]
ret t.0
func List.Print(this )
t.0 = this
aux01 = t.0
t.1 = [this + 12]
var_end = t.1
t.2 = [this + 4]
var_elem = t.2
while2_top:
t.3 = var_end
t.4 = Sub(1 t.3)
if0 t.4 goto :while2_end
t.5 = var_elem
t.6 = [t.5]
t.6 = [t.6+4]
t.7 = call t.6(t.5 )
PrintIntS(t.7)
t.8 = aux01
t.9 = [t.8]
t.9 = [t.9+32]
t.10 = call t.9(t.8 )
aux01 = t.10
t.11 = aux01
t.12 = [t.11]
t.12 = [t.12+24]
t.13 = call t.12(t.11 )
var_end = t.13
t.14 = aux01
t.15 = [t.14]
t.15 = [t.15+28]
t.16 = call t.15(t.14 )
var_elem = t.16
goto :while2_top
while2_end:
t.17 = 1
ret t.17
func LL.Start(this )
t.0 = HeapAllocZ(16)
[t.0] = :vmt_List
if t.0 goto :null2
	Error("null pointer")
null2:
last_elem = t.0
t.1 = last_elem
t.2 = [t.1]
t.2 = [t.2+0]
t.3 = call t.2(t.1 )
aux01 = t.3
t.4 = last_elem
head = t.4
t.5 = head
t.6 = [t.5]
t.6 = [t.6+0]
t.7 = call t.6(t.5 )
aux01 = t.7
t.8 = head
t.9 = [t.8]
t.9 = [t.9+36]
t.10 = call t.9(t.8 )
aux01 = t.10
t.11 = HeapAllocZ(16)
[t.11] = :vmt_Element
if t.11 goto :null3
	Error("null pointer")
null3:
el01 = t.11
t.12 = 25
t.13 = 37000
t.14 = 0
t.15 = el01
t.16 = [t.15]
t.16 = [t.16+0]
t.17 = call t.16(t.15 t.12 t.13 t.14 )
aux01 = t.17
t.18 = el01
t.19 = head
t.20 = [t.19]
t.20 = [t.20+8]
t.21 = call t.20(t.19 t.18 )
head = t.21
t.22 = head
t.23 = [t.22]
t.23 = [t.23+36]
t.24 = call t.23(t.22 )
aux01 = t.24
t.25 = 10000000
PrintIntS(t.25)
t.26 = HeapAllocZ(16)
[t.26] = :vmt_Element
if t.26 goto :null4
	Error("null pointer")
null4:
el01 = t.26
t.27 = 39
t.28 = 42000
t.29 = 1
t.30 = el01
t.31 = [t.30]
t.31 = [t.31+0]
t.32 = call t.31(t.30 t.27 t.28 t.29 )
aux01 = t.32
t.33 = el01
el02 = t.33
t.34 = el01
t.35 = head
t.36 = [t.35]
t.36 = [t.36+8]
t.37 = call t.36(t.35 t.34 )
head = t.37
t.38 = head
t.39 = [t.38]
t.39 = [t.39+36]
t.40 = call t.39(t.38 )
aux01 = t.40
t.41 = 10000000
PrintIntS(t.41)
t.42 = HeapAllocZ(16)
[t.42] = :vmt_Element
if t.42 goto :null5
	Error("null pointer")
null5:
el01 = t.42
t.43 = 22
t.44 = 34000
t.45 = 0
t.46 = el01
t.47 = [t.46]
t.47 = [t.47+0]
t.48 = call t.47(t.46 t.43 t.44 t.45 )
aux01 = t.48
t.49 = el01
t.50 = head
t.51 = [t.50]
t.51 = [t.51+8]
t.52 = call t.51(t.50 t.49 )
head = t.52
t.53 = head
t.54 = [t.53]
t.54 = [t.54+36]
t.55 = call t.54(t.53 )
aux01 = t.55
t.56 = HeapAllocZ(16)
[t.56] = :vmt_Element
if t.56 goto :null6
	Error("null pointer")
null6:
el03 = t.56
t.57 = 27
t.58 = 34000
t.59 = 0
t.60 = el03
t.61 = [t.60]
t.61 = [t.61+0]
t.62 = call t.61(t.60 t.57 t.58 t.59 )
aux01 = t.62
t.63 = el02
t.64 = head
t.65 = [t.64]
t.65 = [t.65+20]
t.66 = call t.65(t.64 t.63 )
PrintIntS(t.66)
t.67 = el03
t.68 = head
t.69 = [t.68]
t.69 = [t.69+20]
t.70 = call t.69(t.68 t.67 )
PrintIntS(t.70)
t.71 = 10000000
PrintIntS(t.71)
t.72 = HeapAllocZ(16)
[t.72] = :vmt_Element
if t.72 goto :null7
	Error("null pointer")
null7:
el01 = t.72
t.73 = 28
t.74 = 35000
t.75 = 0
t.76 = el01
t.77 = [t.76]
t.77 = [t.77+0]
t.78 = call t.77(t.76 t.73 t.74 t.75 )
aux01 = t.78
t.79 = el01
t.80 = head
t.81 = [t.80]
t.81 = [t.81+8]
t.82 = call t.81(t.80 t.79 )
head = t.82
t.83 = head
t.84 = [t.83]
t.84 = [t.84+36]
t.85 = call t.84(t.83 )
aux01 = t.85
t.86 = 2220000
PrintIntS(t.86)
t.87 = el02
t.88 = head
t.89 = [t.88]
t.89 = [t.89+16]
t.90 = call t.89(t.88 t.87 )
head = t.90
t.91 = head
t.92 = [t.91]
t.92 = [t.92+36]
t.93 = call t.92(t.91 )
aux01 = t.93
t.94 = 33300000
PrintIntS(t.94)
t.95 = el01
t.96 = head
t.97 = [t.96]
t.97 = [t.97+16]
t.98 = call t.97(t.96 t.95 )
head = t.98
t.99 = head
t.100 = [t.99]
t.100 = [t.100+36]
t.101 = call t.100(t.99 )
aux01 = t.101
t.102 = 44440000
PrintIntS(t.102)
t.103 = 0
ret t.103
func AllocArray(size)
bytes = MulS(size 4)
bytes = Add(bytes 4)
v = HeapAllocZ(bytes)
[v] = size
ret v
